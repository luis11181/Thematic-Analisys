comment;calificacion
"Resulta util pero en mi caso llego a ser una mala practica el enviar un codigo solo para saber que estaba mal en lugar de ponerme en la tarea de revisar el codigo por cuenta propia";"De acuerdo"
"Porque permite la visualizacion automatica de los errores en el codigo, y hace que la evaluacion de casos a resolver sea mas facil";"Totalmente de acuerdo"
"Por que te compara la salida esperada con la que tu das y eso lo hace mas facil";"Totalmente de acuerdo"
"Aveces  errores como  run time error  no realizaban  una correccion o una especificacion del error";"Algo de acuerdo"
"porque muestra el codigo del programa";"Totalmente de acuerdo"
"no se especificaba los posibles errores, solo mostraba los casos de error en la salida";"Algo de acuerdo"
"Es muy intuitiva entonces era facil saber las cosas que hacian falta  que habia que agregar.";"Totalmente de acuerdo"
"es una forma facil de identificar los errores y encontrar una mas pronta solucion";"De acuerdo"
"Porque permitia ver que salidas daba el programa frente a ciertas entradas en las cuales habia un error, lo cual, con un poco de intuicion y conocimiento del codigo se podia arreglar para que el mismo quedara sin errores algunos.";"Totalmente de acuerdo"
"El programa  especifica donde se encuentran los errores";"De acuerdo"
"Algunas veces no mostraba claramente donde se encontraba el problema";"De acuerdo"
"Si, ya que me indica mas o menos lo que podia tener mal";"De acuerdo"
"Porque muestra los errores explicitos.";"De acuerdo"
"la mayoria de veces son claras las correcciones, algunas veces no";"De acuerdo"
"Si fue muy util y tambien ayuda la herramienta the check your code";"De acuerdo"
"Como dije antes, habia errores que no era capaz de identificar, en parte porque no entendia el mensaje que la plataforma sacaba. Esto me confundia y entonces podia llegar a cometer errores donde no habian por este malentendido. Ya que no siempre era capaz de identificar los errores, tampoco podia saber como corregirlos.";"Algo de acuerdo"
"Nos ayudaba mediante los ejemplos de correccion a ver la parte que teniamos mal en el codigo";"Totalmente de acuerdo"
"Da una ayuda rapida y precisa";"Totalmente de acuerdo"
"ya que es muy util y concisa, muestra a la perfeccion cual es y donde se encuentra el error";"Totalmente de acuerdo"
"Si, ya que al presentar algun error se podia ver especificamente que estaba mal.";"De acuerdo"
"Era dificil de entender donde estaba el error y no daba descripcion detallada";"En desacuerdo"
"en si daba una guia pero muchas veces uno no tenia ni idea de porque botaba el error";"Algo de acuerdo"
"Permite conocer los aspecto a modificar de buena forma";"De acuerdo"
"Es util aunque en muchos casos dificil de entender";"Algo de acuerdo"
"la herramienta funciona bien en ese punto";"Totalmente de acuerdo"
"Cuando funcionaba, era facil de entender que partes debia corregir";"De acuerdo"
"Algunas veces mostraban bien el error";"De acuerdo"
"Nos ayuda a darnos cuenta de que estamos haciendo mal aunque aveces se vuelve fastidioso porque la impresion de mi programa debe ser exactamente igual a la de los ejemplos";"De acuerdo"
"A veces es poco funcional";"Algo de acuerdo"
"Como he dicho anteriormente, las herramientas que nos ofrece UNCode son una base esencial para nosotros los que aprendemos a programar, pues sin la ayuda de estas herramientas se nos dificultaria mucho mas resolver los problemas.";"Totalmente de acuerdo"
"Daba a entender el error aunque a veces la pagina era muy estricta y daba errores innecesarios.";"De acuerdo"
"Los mensajes que se mostraban cuando salia un error en el codigo eran facil de buscar en Internet y habian cientos de respuestas explicando el error";"De acuerdo"
"SABES EN QUE TE EQUIVOCASTE";"De acuerdo"
"Identifica los errores de forma asertiva.";"Totalmente de acuerdo"
"Si, aunque falta detallar un poco mas el tipo de error que se produce";"Algo de acuerdo"
"Me parecio una herramienta muy buena cuando la vi, sin embargo, no la use para mis ejercicios.";"De acuerdo"
"no es totalmente claro el error senalado";"Algo de acuerdo"
"Si es bastante ya que la misma plataforma tiene un apartado donde explica que significa cada mensaje que arroja al hacer funcionar el programa, sin embargo en mi caso era complicado identificar inmediatamente el problema especifico";"De acuerdo"
"Hay situaciones en las que no se entiende el error";"Algo de acuerdo"
"En algunos ejercicios no se sabe por que no completa el requerimiento del ejercicio y pueden ser detalles muy sencillos";"Algo en desacuerdo"
"Muchas veces no era muy claro cual era realmente el error";"Algo en desacuerdo"
"Uno lograba saber que tipo de error tenia el codigo, y al saber que error se tenia, uno se podia hacer una idea de que parte del codigo estaba mal";"De acuerdo"
"Se especificaba el tipo de error que se habia cometido";"De acuerdo"
"Realmente hay claridad dependiendo de las condiciones puestas por el profesor, aveces no fueron muy claras";"Algo de acuerdo"
"La plataforma daba los errores que tenia el codigo puesto";"De acuerdo"
"En si UNCode no daba las retroalimentaciones. Uno mismo debia pensar en los posibles errores.";"Algo en desacuerdo"
"A veces era muy vaga la explicacion del error, simplemente no era especifico.";"Algo en desacuerdo"
"si";"De acuerdo"
"Fue util";"De acuerdo"
"La retroalimentacion automatica ofrecida es basica y muchas veces no permite identificar facilmente el error que uno esta cometiendo";"Algo de acuerdo"
"Si, indicaba la linea.";"Totalmente en desacuerdo"
"Porque se tiene la opcion de ver como se desarrolla el codigo y corregir los errores";"Totalmente de acuerdo"
"Era muy dificil tratar de comprender bien lo que se pedia";"Algo en desacuerdo"
"Daba la explicacion de los errores, aunque en muy pocos casos, en mi opinion no eran muy claros.";"De acuerdo"
"Presentar la respuesta correcta y compararla con la erronea hace que nos demos cuenta de que fallo en nuestro programa.";"Totalmente de acuerdo"
"Permitia identificar la seccion especifica del programa para corregir.";"De acuerdo"
"Es una herramienta sublime, y siempre atinaba, lastima que en runtime error no indicara muy claramente en que ciclo se quedaba infinitamente.";"Totalmente de acuerdo"
"en algunos casos si";"De acuerdo"
"La plataforma ofrecia la comparacion entre la respuesta correcta y la respuesta que daba el programa escrito, sin embargo, esto en algunas ocasiones no era util para determinar cual fue el error del programa.";"De acuerdo"
"Al saber los casos especificos en donde fallaba el codigo era de mucha ayuda ya que permitia corregir el error mas rapido y facil.";"Totalmente de acuerdo"
"Muchas veces no pasaba eso, ya que lanzaba el error pero uno de pronto no sabia como hacerlo mas eficiente.";"Algo de acuerdo"
"la retroalimentacion aveces es buena sin embargo en otros casos no es muy clara de manera que no da una retroalimentacion constructiva";"Algo de acuerdo"
"Porque nos muestra en donde estamos fallando y nos muestra que tipo de error es lo que nos puede ayudar a corregir los errores.";"De acuerdo"
"Porque de esta forma podia ver las fallas que experimentaba mi programa en ciertos casos, permitiendo que buscara nuevas opciones para este y asi llegar a soluciones mas optimas.";"Totalmente de acuerdo"
"Pienso que tal vez deberia ser un poco mas explicito y especifico a la hora de encontrar un error, de igual forma adjuntar un par mas de ejemplos, no obstante, asi como esta se entiende perfectamente el tipo de error y una vaga idea de como resolverlo.";"De acuerdo"
"Muchas veces los codigos de error son poco claros o directamente aparece un runtime en vez de marcar la linea del error. Siendo que a veces no eran programas con ciclos.";"Algo en desacuerdo"
"Porque Uncode ofrece herramientas utiles para reconocer los errores";"De acuerdo"
"Ayuda mucho saber que es lo que tiene que mostrar mi programa";"Totalmente de acuerdo"
"A veces el error no era claro o no era entendible";"Algo de acuerdo"
"La retroalimentacion muchas veces sirvio de guia para redireccionar mi programa y entender mejor el ejercicio.";"De acuerdo"
"Los nombres de los errores son demasiado genericos. lo que hace que en ocasiones sea dificil saber por que se produce el error.";"Algo en desacuerdo"
"Poder visualizar el momento en que el codigo fallo permite editar los codigos con mayor facilidad y seguridad. Siendo un principiante en el tema de la programacion esto fue de gran ayuda.";"Totalmente de acuerdo"
"Porque me permitia comparar lo que hacia mi programa y lo que se buscaba";"De acuerdo"
"Conociendo los casos donde el codigo no funciona a era sencillo cambiarlo";"De acuerdo"
"Porque especificaba la respuesta correcta y las similitudes con la respuesta que nuestro codigo daba.";"Totalmente de acuerdo"
"Tanto la vista de salidas a respectivas entradas era muy util, pues no teniamos necesidad de tener un ide, fue muy util en especal el codlens ya que podiamos ver especificamente la forma en la funcionaba nuestro codigo en cada paso por lo que facilitaba el proceso de depuracion";"Totalmente de acuerdo"
"Porque nos permitia enterarnos en que fallaba el codigo y poder corregirlo con mayor facilidad.";"Totalmente de acuerdo"
"daba pistas utiles para corregir mis errores";"Totalmente de acuerdo"
"Era muy util que me mostrara en que casos mi programa no funcionaba, sin embargo muchas veces el error no era claro, como por ejemplo, en los casos de imprimir tablas, muchas veces mi programa imprimia espacios adicionales y era dificil encontrar el error.";"Algo de acuerdo"
"La presencia del tutor, donde se puede ver la ejecucion paso a paso de los programas, permitiendonos analizarlos y comprender mejor como funcionan y que esta mal.";"Totalmente de acuerdo"
"Las comparaciones que hace UNcode me facilita encontrar el problema y corregirlo";"De acuerdo"
"A veces los casos presentaban entradas demasiado largas y era casi imposible detectar el error, por ende era dificil saber que estaba mal.";"Algo de acuerdo"
"Generalmente uno no contempla a primeras los casos limite, Uncode en ese aspecto fue de gran ayuda.";"De acuerdo"
"UNCode identifica el error pero en muchos casos no se lograba identificar cual era, el programa tampoco dice como se debe solucionar sino solamente en que linea esta el error, lo cual no ayuda a corregir el error";"Algo de acuerdo"
"Gracias al  Test mode  visualizar la accion paso por paso del codigo fue una muy util herramienta para fijarme en como funciona la logica del algoritmo. Ademas de subrayar y anotar errores de sintaxis.";"Totalmente de acuerdo"
"Ayuda a encontrar en que esta fallando el problema del programa, es buena herramienta la comparacion de la salida esperada y la salida que esta dando el programa que uno ingreso.";"Totalmente de acuerdo"
"porque permitian replantear un codigo , ya fuera por un fallo en un caso o un error de eficiencia.";"Totalmente de acuerdo"
"porque en la mayoria de ocasiones ver en que puntos estaba equivocado me permitio darme una mejor idea de que estaba haciendo mal mi programa.";"Totalmente de acuerdo"
"En algunas ocasiones no queda muy claro en donde esta el error";"Algo de acuerdo"
"Seria util poder saber cual es el limite de tiempo para que una funcion se ejecute para tener cuidado con las repeticion. Por lo demas esta bien";"Algo de acuerdo"
"Me permitia saber que tipo de error estaba cometiendo, y en base a eso buscar una mejor solucion.";"De acuerdo"
"Aunque es responsabilidad de quien escribe el codigo, la plataforma ayudaba a encontrar los errores presentes en los codigos";"Totalmente de acuerdo"
"Con los ejemplos podia darme cuenta de lo que estaba fallando en mi codigo";"De acuerdo"
"Esta es una de las mejores ventajas que tiene UNcode ya que nos hace darnos cuenta de que nos falla en el codigo, pero uno como programador como el profesor una vez dijo:  no importa saber las entradas, tienes que saber como programador en que falla tu codigo sin saber las entradas .";"De acuerdo"
"a veces no mostraba bien los errores o habian entradas muy largas que tenia una limitacion de visualizaicon";"Algo de acuerdo"
"Porque a partir de las entradas que Uncode da al programa y las respuestas que espera que salgan, permite intuir facilmente los problemas que tiene el codigo";"Totalmente de acuerdo"
"La retroalimentacion automatica cuando permite ver que casos tienen errores funciona perfecto para entender mejor las limitaciones del programa, incluso cuando no se muestran estos casos es posible entender si el programa no funciona, si funciona a medias o si existen casos que no considere pero que estarian generando errores.";"Totalmente de acuerdo"
"Es util para saber donde esta el fallo, que muchas veces son errores bobos pero que uno no ve a simple vista";"Algo de acuerdo"
"No todas las actividades tenian retroalimentacion";"Algo de acuerdo"
"Una vez el profesor habilito un par de respuestas para poder ver, fue muy util";"De acuerdo"
"Presentaba paso a paso lo que el codigo estaba ejecutando y eso me permitia a mi encontrar mas rapidamente el error en determinada parte del codigo";"Totalmente de acuerdo"
"Ya que de esta manera podiamos aprender de nuestros errores y aprender con el fallo para asi corregirlo en un futuro";"Totalmente de acuerdo"
"una vez entendido el sistema de retroalimentaion, encontrar los errores es sencillo";"Totalmente de acuerdo"
"Si bien muestra un paso a paso del codigo, y presenta unas herramientas para verificar el sintaxis del codigo, estos a veces tardaban demasiado o no funcionaban";"Algo de acuerdo"
"Porque si estaba mal nos daba pistas de lo que estaba mal y podiamos arreglar";"De acuerdo"
"Al dar las respuestas que deberian salir me daba una idea sobre el error del codigo";"De acuerdo"
"Como tal no se sabe como corregirlos si no solo te dice que pasa o no un caso posible, eso te pone a pensar que no lo estas planteando de manera completa y por eso hay un error, ayuda a pensar mas y mejor las soluciones de los problemas";"En desacuerdo"
"La opcion de revisar cuando no funciona el codigo ayuda a encontrar los fallos mas facilmente y la de revisar como funciona el codigo paso a paso ayuda a entender un monton de cosas";"Totalmente de acuerdo"
"Decia especificamente cual era el error y donde estaba";"Totalmente de acuerdo"
"El error no siempre era muy especifico";"Algo en desacuerdo"
"Explicaba bien como utilizar las diferentes herramientas de UNCode y diferentes tips sobre el uso de la misma.";"De acuerdo"
"Mostraba el error y la linea del mismo";"Totalmente de acuerdo"
"porque mostraba lo que salia mal en nuestro codigo y como debia ser una salida esperada permitiendo identificar los errores";"Totalmente de acuerdo"
"No especifica directamente el error, haciendo dificil saber concretamente la parte que esta mal a menos que sea un error realmente notable (si el error es, por ejemplo, un espacio de mas al final de una linea, puede ser muy dificil de encontrar)";"De acuerdo"
"Al obtener un fallo en el codigo se podia verificar las respuestas esperadas y las obtenidas para asi tener una comparacion";"De acuerdo"
"Gracias a que se pueden revisar las pruebas que esta plataforma realiza";"Totalmente de acuerdo"
"Era dificil interpretar lo que la plataforma mostraba como error.";"En desacuerdo"
"Detecta los errores y te dice donde y cual es, permitiendo asi su correccion.";"Totalmente de acuerdo"
"Mostraba especificamente para que pruebas el codigo arrojaba error.";"De acuerdo"
"Muestra especificamente los errores tanto como los ejercicios aceptados";"Totalmente de acuerdo"
"no los mostraba en todos";"En desacuerdo"
"Muchas veces solo mostraba que habia un error pero no se sabia de que era.";"Algo en desacuerdo"
"Retroalimentacion muy general, sin ofrecer ayuda";"En desacuerdo"
"en la mayoria de casos si nos informaba del error pero en algunos muy especificos no";"De acuerdo"
"Muchas veces no se retroalimentan los errores en los codigos, y en algunos casos solo por espacios da todo el punto incorrecto";"Algo de acuerdo"
"La parte del debuging se hace muy compleja en Uncode ya que los errores aunque son especificos. Muchas veces no da informacion importante para corregir";"Totalmente en desacuerdo"
"porque aunque los demarca, no es especifico con que esta mal";"Algo en desacuerdo"
"no da una retroalimentacion precisa de cual fue el fallo y cuales test hace la plataforma para calificar";"En desacuerdo"
"No me sirvio como guia ya que  era enredado para mi, ver las sugerencias";"Algo en desacuerdo"
"porque el uncode no siempre  decia que estaba mal";"Algo en desacuerdo"
"Me ayudo mas de una vez a saber por donde iba y que debia cambiar, aunque no siempre";"De acuerdo"
"Tuvimos algunos problemas que se presentaban unicamente en y no en Google Collab o en otros entornos de programacion.";"Algo en desacuerdo"
"No entrega una descripcion clara del problema, es mas util corregir los errores por Colab";"Totalmente en desacuerdo"
"No me sirvio para corregir mis errores";"En desacuerdo"
"Estoy algo en desacuerdo ya que a pesar de que en algunas ocasiones mostraba cual linea fallaba, la plataforma no muestra cual podria ser la estructura correcta para que funcione";"Algo en desacuerdo"
"Muchas veces no me deja ver un ejemplo de en que estoy fallando lo que dificulta encontrar el error";"Algo en desacuerdo"
"Es complicado entender la razon por la cual un codigo esta mal, no es muy clara la retroalimentacion del programa referente a los codigos.";"Algo en desacuerdo"
"En muy pocas ocasiones UNcode presentaba los posibles errores, mientras en la gran mayoria los errores por falta de un espacio o algo por el estilo debia descubrirlo por mi cuenta.";"Algo en desacuerdo"
"Es dificil saber que es lo que esta mal exactamente, encontrar el posible error puede tomar tiempo, ademas cuando se realizan los tests solo muestra que es lo que dos o tres de estos realmente hacen, por lo que uno no puede saber en que fallo el codigo.";"En desacuerdo"
"Si, la herramienta fue bastante util para ver como se desarrollaba el programa y en que casos no funcionaba.";"De acuerdo"
"Porque no es preciso con los errores, dice donde es, pero no es efectivo con el tipo de error";"En desacuerdo"
"Nunca me sirvio ninguna de las recomendaciones que me otorgaba la plataforma, sobre todo en casos en los que el codigo corria a la perfeccion en otras plataformas y en UNCode fallaba";"En desacuerdo"
"A pesar de que no siempre se conocian los errores proporcionaba una idea de en que parte de la solucion del problema estaba fallando, ademas de tambien ver las fallas en el sistema interactiva que tiene para visualizar la ejecucion del codigo.";"De acuerdo"
"Si, porque al dar el resultado automaticamente garantiza que no se exceda el tiempo limite para la entrega de los ejercicios y poder resolver los errores naturalmente";"De acuerdo"
"No es muy entendible para alguien que apenas esta aprendiendo a porgramar por primera vez";"Algo en desacuerdo"
"ubicada donde estaba el error exacto";"De acuerdo"
"En lo que respecta a la revision del codigo, el sistema de correcion de errores es muy util para identificar faltas en la sintaxis que son recurrentes al empezar a programar";"Totalmente de acuerdo"
"Entrega un porcentaje de error y las entradas que fallaron asi que se puede corregir";"Totalmente de acuerdo"
"hacia llegar  al error";"De acuerdo"
"Mostraba exactamente el lugar en el cual se encontraba el problema.";"Totalmente de acuerdo"
"Es la primera pista que como usuario obtenemos, para poder resolver correctamente el ejercicio";"De acuerdo"
"Ya que cuando algo queda mal, te muestra el error, y con eso te dice cuales pruebas de ensayo te quedaron mal.";"De acuerdo"
"De acuerdo porque solo mostraba mi error, mas no la linea exacta o algo asi.";"De acuerdo"
"";"Algo de acuerdo"
"Nos proporcionaba las salidas correctas y las que no correspondian o estaban mal";"Algo de acuerdo"
"Pues muestra como es la salida esperada y asi comparar con la nuestra";"Algo de acuerdo"
"algunas veces no era muy claro y habia que solucionar las dudas con el profesor";"Algo de acuerdo"
"Me parecio muy bueno el que la plataforma compare las salidas, ya que nos permite corregir errores de una manera agil.";"Totalmente de acuerdo"
"pues eficiente pero no del todo a veces no es muy claro el error, ni siquiera el error esta en la linea de codigo que muestra el corrector";"Algo de acuerdo"
"porque al revisar las respuestas incorrectas se puede saber en que se fallo y a partir de esto se puede corregir el codigo.";"Totalmente de acuerdo"
"La plataforma muestra el output que deberia salir, pero no muestra cual es el posible error";"En desacuerdo"
"Sus ensayos permiten obtener una respuesta cercana a los errores cometidos";"Totalmente de acuerdo"
"Es verdad, que el codigo tiene que ser completamente exacto y eso lleva a fallos no tan graves como una mayuscula o una coma, pero aun asi justificaba de manera adecuada y hasta con ilustraciones los fallos para poder corregirlos";"Totalmente de acuerdo"
"Si, debido a que el programa nos muestra la correcta solucion , y con esta uno puede mejorar el programa, sin acomodarlo a las respuestas";"Totalmente de acuerdo"
"solo da los dos outputs mas no aclara lo que debe hacerse o incluso llega a ser ilogico que por un espacio todo quede mal";"Totalmente en desacuerdo"
"Mostraba los errores de salida existentes en el codigo ademas de que usa el sistema de python tutor para ver en que punto falla la ejecucion";"Totalmente de acuerdo"
"En casos si fue util, pero en otros cuando no se entendia muy bien el ejercicio, tener las salidas no era muy util.";"De acuerdo"
"La mayoria de veces este cumplia su funcion, pero en algunos casos la misma plataforma se contradecia entre el 'tester' y los casos de ejemplo o incluso el resultado era distinto al ejecutar el codigo en un sitio distinto a uncode";"Algo de acuerdo"
"A veces era confuso, pero si se conocian los errores y lo que podia causarlos era de gran utilidad";"De acuerdo"
"a veces no da ningun reporte de error o simplemente dice que esta mal pero no especifica en que parte";"Algo en desacuerdo"
"Me decia exactamente donde tenia los fallos y cual era";"Totalmente de acuerdo"
"en ocasiones los unicos errores eran de formato";"Algo de acuerdo"
"En ocasiones no se veian errores evidentes";"Algo de acuerdo"
"Sirvio para saber en que casos no servia el codigo.";"Algo de acuerdo"
"La mayoria de veces es dificil identificar el error";"Totalmente en desacuerdo"
"Los casos de calificacion siempre son utiles, y la comparacion de respuestas tambien, pero a veces se presentan casos muy largos que a veces puede significar llevar a hacer mucha prueba y error para el estudiante";"De acuerdo"
"Ofrece buenas alternativas para poder observar la ejecucion de codigo paso a paso, asi como los casos de prueba en donde fallo el codigo lo cual facilita la busqueda del error";"Totalmente de acuerdo"
"Porque el poder ver el paso a paso y ver como cambian las variables, ayuda a ver en que parte el codigo no hace lo que uno espera";"Totalmente de acuerdo"
".";"Algo en desacuerdo"
"Evidenciaba problemas en diferentes impresiones lo que permitia obtener respuestas funcionales e identificacion inmediata";"Totalmente de acuerdo"
"La mayoria de veces, ya que hay test que no deja ver, y a veces son los unicos que arrojan el error.";"De acuerdo"
"a veces no funciona";"Algo de acuerdo"
"Porque informaba que tipo de error habia en el codigo y en que linea, ademas, informaba sobre errores logicos como bucles infinitos";"Totalmente de acuerdo"
"pues la realimentacion es muy escasa";"Algo en desacuerdo"
"Hay errores que no dan retroalimentacion, por ejemplo,uno que afirman un error al final pero no indican ni linea ni tipo";"Algo en desacuerdo"
"La comparacion del resultado esperado y el brindad era de mucha utilidad";"De acuerdo"
"ayuda a mejorar el codigo";"De acuerdo"
"La opcion de ver el paso a paso y ver los ejemplos";"De acuerdo"
"Ya que podiamos visualizar que errores especificos poseia nuestro codigo, comparando las salidas.";"De acuerdo"
"Los errores indicaban la linea y el tipo de error";"De acuerdo"
"Retroalimentacion? Los errores los encontraba yo mismo o si no moria";"De acuerdo"
"Porque muestra en donde esta el error para que uno lo pueda corregir";"De acuerdo"
"En ocasiones aparecia un error e indicaba en donde se encuentra ese error, o algunas salidas faltaban, y con la herramienta de visualizar codigo se entendia el funcionamiento general del codigo y se le podia realizar un seguimiento.";"De acuerdo"
"Me ayudo a analizar correctamente el punto exacto donde se me producian errores en mi codigo";"De acuerdo"
"Pues se podia ver el paso a paso como funcionaba el codigo en herramientas";"De acuerdo"
"En muchos casos era realmente util, sin embargo puede ser un poco mas especifica identificando el error de escritura en una cadena de texto o ser mas especifico en el error para no buscar sin sentido";"Algo de acuerdo"
"Es util para indagar cuales son los errores y de ahi como solucionarnos";"Algo de acuerdo"
"util para conocer las salidas de forma semi-inmediata y errores en determinada linea de codigo";"Algo de acuerdo"
"Si bien permite ver el valor esperado de las respuestas, para casos especificos la informacion no se desglosaba para otros, dando una incertidumbre como resultado. Igualmente no habia guianza ni acompanamiento para la resolucion de los ejercicios mas complejos.";"Algo de acuerdo"
"Si, con la herramienta Python tutor es facil ver en que parte del codigo esta el error";"De acuerdo"
"Algunas veces la retroalimentacion de UNCode no es muy especifica en cuanto a tiempos de ejecucion.";"Algo de acuerdo"
"Muchos de los algoritmos que disene se pudieron realizar gracias a la realimentacion de UNcode";"De acuerdo"
"La verdad me ayudo a corregir muchos errores de sintaxis";"De acuerdo"
"Aunque UNcode muestra los errores que presento el programa, son demasiado generales. Estan clasificados en categorias, por lo que varias veces tuve que recurrir a otras herramientas para comprobar cual fue era el error (nombre del error).";"Algo en desacuerdo"
"Solo saber las respuestas no ayudan a identificar errores minimos que no permiten la ejecucion del programa.";"En desacuerdo"
"Si, ya que mostraba la linea en la que fallaba en codigo";"De acuerdo"
"La herramienta que tiene para corregir errores es util, pero podria ser mas optima oeficiente.";"De acuerdo"
"Explica lo que esta mal aunque no entra en detalles.";"De acuerdo"
"si, aunque en algunos casos de prueba que eran muchos datos de entrada se tornaba un poco complicado descubir el error, pero en general estuvo bien.";"De acuerdo"
"Mostraba las variables que usaba";"Totalmente de acuerdo"
"Porque muchas veces no se tenia la certeza total de que estaba mal, al ver lo que se esperaba uno podia realizar una evaluacion y realizar una correcta correccion.";"De acuerdo"
"Mencionaba los tipos de errores presentes en cada seccion del codigo y podia ver los errores humanos que no eran visibles a simple vista.";"De acuerdo"
"Es intuitiva, didactica y muy sencilla de comprender y usar";"Totalmente de acuerdo"
"Las correcciones fueron de ayuda para comprender y arreglar los errores que se presentaba";"De acuerdo"
"Para algunos problemas UNCode no entregaba el expected output vs el output generado por nosotros los estudiantes, en esos caso no era facil saber en donde fallaba el codigo";"Algo de acuerdo"
"Me indica en donde me he equivocado y me parece muy util";"De acuerdo"
"UNCode es una herramienta que permite notar facilmente los errores que tenemos en nuestros programas.";"Totalmente de acuerdo"
"es de ser requerido descargar y probar de manera autonoma errores, usando metodos para diferenciar nuestro output del requerido, ya que el metodo de mostrarse es un poco precario";"Algo en desacuerdo"
"A partir de los errores obtenidos y las difierencias en las respuestas era posible inferir cuales eran los errores que se presentaban en el codigo y buscar la forma de arreglarlos.";"De acuerdo"
"Porque cuando eran los simbolos rojos se entendia perfectamente lo que estaba mal, pero los simbolos amarrillos no se entendia que tocaba hacer";"Algo de acuerdo"
"Poder ver errores en los programas enviados facilita la identificacion de problemas y la solucion de las mismas.";"Totalmente de acuerdo"
"Mostraba de manera clara las falencias del codigo y permitia, al ver los casos de prueba donde se fallaba y su respuesta , corregirlos de manera oportuna";"Totalmente de acuerdo"
"El python tutor le hacia a uno la prueba de escritorio ahorrando tiempo en la deteccion del problema que se podia utilizar para solucionarlo.";"Totalmente de acuerdo"
"La forma que tiene UNcode de comparar las respuestas cuando hay algo mal, sirve para caer en cuenta del error y rectificar el codigo, sin embargo, cuando el numero de respuestas es muy alto, UNcode (a veces) no muestra la comparacion, por lo que es un poco mas dificil de conocer el error.";"De acuerdo"
"Una evaluacion mucho mas directa y analitica";"Totalmente de acuerdo"
"Si ayudo totalmente, excepto en algunos casos que eran muy grandes y no se podian interpretar, la recomendacion que doy es que pueden ensenar a los estudiantes a usar diffchecker para estos casos ya que Nicolas no a menciono pero personalmente no supe como usar esta herramienta";"De acuerdo"
"si pero deberian implementar que siempre se vea el tiempo que dura el programa en cada submission.";"De acuerdo"
"Ya que detecta si el codigo esta bien o mal escrito y esto afectaria al resultado";"De acuerdo"
"A pesar de que en algunas ocaciones no era clara la causa del error, en gran mayoria de los casos, esta si servia para revisar el codigo";"De acuerdo"
"Da una idea de que tan lejos o que tan cerca se esta de la solucion correcta, lo que hace que el estudiante se encuentre en la tarea de comprobar sus respuestas erroneas y corregirlas para entender el problema en su totalidad";"De acuerdo"
"Muchas veces los errores no se identifican tan facil solo viendo la salida esperada y la salida del programa, hay errores como  Time limit exeeded  o  Runtime error  que no muestran lo que se pudo imprimir antes del error. El problema real llega cuando hay un  Runtime error  y se usan ciclos o recursion, puesto que muestra la linea en donde se encuentra el error, pero no el caso, haciendo mas largo el proceso de correccion";"Algo de acuerdo"
"Mostraba los errores claramente y mostraba lo que se esperaba y ademas ofrecia la herramienta de python tutor para mirar paso a paso .";"De acuerdo"
"Porque me era muy util saber que era lo que estaba exactamente mal en los casos para poder corregir errores.";"Totalmente de acuerdo"
"Al obtener una salida erronea, el programa me mostraba lo esperado y lo obtenido, lo cual era muy util para corregir el programa. Tambien si salia TIME_LIMIT_EXCEEDED, sabia que debia modificar mi codigo para que no durara tanto.";"De acuerdo"
"La realimentacion automatica algunas veces no mostraba  los errores. Ademas, en algunos casos era un poco tediosa, puesto que mostraba todo en vertical y era dificil encontrar en que estaba fallando. Sin embargo fue una herramienta muy util que permitia usar el tiempo en mejorar el codigo en vez de usarlo en buscar errores.";"Totalmente de acuerdo"
"Considero que esta es la mayor virtud de UNCode. Pero no estaria de mas que UNCode diera una mejor explicacion de los errores o sugerencias de como corregirlos, mientras el aprendiz se familiariza con ellos. La herramienta de verificacion de buenas practicas es un poco inutil, ya que, aunque hace recomendaciones, no explica por que esto es lo recomendable.";"De acuerdo"
"La retroalimentacion fue detallada y muy util en todos los casos";"Totalmente de acuerdo"
"En los casos que daban time limit, me sucedio varias veces que crei que lo que demoraba estaba en cierta parte y pasaba mucho tiempo intentando corregirlo, tiempo despues me daba cuenta que estaba en otro lado el problema";"De acuerdo"
"Sabia que tipo de error era y me daba una idea de como corregirlo";"De acuerdo"
"La realimentacion no me parecio muy util por que solo te muestra el resultado que busca el programa y hay ejercicios que el resultado no coincide con el enunciado";"En desacuerdo"
"La diferenciacion de respuestas permite detectar errores propios y corregirlos apropiadamente";"De acuerdo"
"Daba informacion la mayoria de veces clara y concisa la cual era perfectamente entendible para usuarios nuevos (aunque muy pocas veces fallaba la verdad)";"Totalmente de acuerdo"
"En algunas ocasiones los errores obtenidos no eran retroalimentados correctamente. Es decir, el mensaje de error del compilador era ininteligible";"En desacuerdo"
"Si los mensajes dados por UNCode acerca de los errores cometidos permitieron que fueran facilmente corregidos";"Totalmente de acuerdo"
"por que ayudaba a ver errores de logica o sintaxis facilmente";"Totalmente de acuerdo"
"Siempre es bueno saber en que esta fallando el programa para corregirlo.";"Totalmente de acuerdo"
"Explicaba exactamente cual era el error en el codigo ademas de permitir ver el momento exacto del error";"Totalmente de acuerdo"
"En algunos casos es dificil saber donde estan los errores";"Algo de acuerdo"
"Hacia pensar en los casos no tomados en cuenta en el programa.";"Totalmente de acuerdo"
"Si habia un error en un caso de prueba, UNCode permitia ver la salida esperada y la entrada del codigo en ciertos casos, a veces no permitia ver los casos de prueba y eso dificultaba un poco la depuracion.";"De acuerdo"
"Eran bastante claras las instrucciones.";"Totalmente de acuerdo"
"Porque ademas de ofrecer herramientas que permiten visualizar el desarrollo del codigo, se pueden ver algunos casos de prueba que ayudan a la comprension del problema";"Totalmente de acuerdo"
"al ver los casos de prueba que estaban mal, se tenia que pensar en que podia haber quedado mal y asi mejorar y aprender de los errores";"De acuerdo"
"Nos muestra en porcentaje de casos aprobados y en muchos casos nos permite ver los casos de prueba para identificar en que estamos fallando.";"Totalmente de acuerdo"
"Si bien mencionaba los errores graves, a veces era de utilidad ver que falta/sobra un parentesis o una palabra esta mal escrita";"De acuerdo"
"Ademas de los mensajes de errores segun la linea, el limite de 999 pasos en el tutor ayuda a optimizar codigo";"Totalmente de acuerdo"
"Con un poco de tiempo se lograba entender facilmente el error que remarcaba la plataforma aunque unicamente fuera la linea y una breve descripcion, pero he de decir que esto tambien ayudaba a aprender a localizar los errores por uno mismo";"Totalmente de acuerdo"
"En la mayoria de casos podia conocer mi error, aunque algunas veces no lo permitio";"De acuerdo"
"Si daba los indicios de porque mi codigo no funcionaba";"De acuerdo"
"En mi opinion, creo que la plataforma en si es suficiente porque nosotros somos los que debemos analizar de una mejor manera el algoritmo para que cumpla funcionalmente. Sin embargo en algunos ejercicios podemos ver los errores en los casos de prueba y esto es muy util para reevaluar la logica que tenemos al escribir el codigo. Por otra parte la herramienta para escribir de una mejor manera el codigo me parece excelente.";"Algo en desacuerdo"
"Al poder comparar los resultados esperados con los resultados obtenidos, se puede hacer un contraste que deja en evidencia las falencias en los programas codificados por cada estudiante, y en caso de que aun existan dudas en cuanto a los errores cometidos, la herramienta  Python tutor  permite a todos los estudiantes ver el paso a paso de cada codigo programado";"Totalmente de acuerdo"
"En la mayoria de casos mostraba exactamente donde estaba el error";"De acuerdo"
"Imprimir los datos que imprimia mi codigo versus los que eran los esperados, ayudaba pero a veces era confuso saber que estaba mal.";"Algo de acuerdo"
"por que indicaba la linea exacta del error y el problema en si";"De acuerdo"
"Si ayudaba a darse cuenta de que errores habia pero a veces no era muy claro";"Algo de acuerdo"
"No muy clara en ciertas ocasiones, muy ambigua.";"Algo de acuerdo"
"Me daba el/los caso(s) concretos para saber que le faltaba a mi codigo para que funcionara correctamente, no era cosa de adivinar si no tratar el problema especifico";"Totalmente de acuerdo"
"Porque al esta plataforma permitir mostrar el desarrollo del programa linea por linea,  promueve a que el estudiante analice cada linea de codigo para adaptarla a los resultados que se le exigen";"Totalmente de acuerdo"
"Con los casos de prueba es dificil porque no sabes que tienes mal, y no te muestra";"Algo en desacuerdo"
"Las herramientas de Test code y Visualize your code son muy utiles frente a revisar nuestros codigos permitiendo ver un paso a paso del codigo.";"Totalmente de acuerdo"
"Porque la pagina estaba habilitada para mostrar donde estaba mal, facilitando la revision y posterior correccion. Por otra parte decir que solo esta mal sin la razon, puede que no sea de mucha utilidad en el aprendizaje.";"Totalmente de acuerdo"
"Porque te decia aveces los errores no quedaban claro en donde estaban";"Algo de acuerdo"
"Si, ya que es mas facil guiarse sabiendo exactamente donde estan los errores para proceder a corregirlos";"De acuerdo"
"Si, en la mayoria de casos las herramientas que posee me ayudaba a retroalimentar errores.";"Algo de acuerdo"
"Es de gran ayuda poder reconocer los errores que presenta mi codigo al comparar las salidas esperadas y las que produce mi codigo.";"De acuerdo"
"Porque permitia analizar las diferencias entre las respuestas obtenidas y las esperadas, ya fuesen de formato, de redondeo, por ciertas mayusculas o por errores en la ejecucion, los que se podian inferir con mayor facilidad.";"Totalmente de acuerdo"
"Se sabia donde estaba el error";"Totalmente en desacuerdo"
"Fue buena";"Algo de acuerdo"
"pues  como tal no me comunicaba cual era mi error, pero es util saber en que casos de prueba funciona mal, para uno mismo solucionar.";"Algo de acuerdo"
"Al ver en donde estaba el error era mas facil encontrar la solucion";"Totalmente de acuerdo"
"Es muy clara y precisa con los errores que esta teniendo el codigo";"Totalmente de acuerdo"
"para errores sintacticos es muy util.";"De acuerdo"
"La interfaz podria ser un poco mas clara y grafica";"Algo de acuerdo"
"Permite corregir las areas del codigo con errores, siguiendo el proceso de las variables";"Totalmente de acuerdo"
"No use mucho las herramientas de seguimiento";"Algo de acuerdo"
"La respuesta es precisa y ayuda a saber en donde tener que revisar el error";"De acuerdo"
"Porque se podia observar cuales eran los errores comparado con los casos de prueba y ademas de los errores de logica y de sintaxis";"Totalmente de acuerdo"
"Como mencione antes, permite tener pistas o indicios de donde esta el fallo. A veces podia ser un espacio extra al final de una impresion, un error sintactico y la herramienta nos permitia descubrirlos mas facilmente.";"Totalmente de acuerdo"
"Se dice cuantos casos de prueba se pasaron y cuantos no y, dependiendo del profesor, se permite la visualizacion de los inputs usados, el output esperado y el que el programa dio.Incluso si el input es muy largo y no se puede visualizar en la pantalla, es posible descargarlo y probarlo.";"Totalmente de acuerdo"
"Porque permite ver que resultados de los casos de prueba  no coinciden con la salida del programa, y se puede hacer un seguimiento a esos casos para ver en que momento del proceso la variable empieza a alejarse de la respuesta esperada";"Totalmente de acuerdo"
"muchas veces ignoraba partes importantes de codigo las cuales en algunos casos daban fallo en algun punto de respuestas";"De acuerdo"
"Esta funcion de UNcode permitia ver la linea exacta en que el codigo no funciona tal como se espera, y uno puede rectificar el error, y volver a probar";"Totalmente de acuerdo"
"Podia encontrar los errores rapidamente y solucionarlos.";"Totalmente de acuerdo"
"porque sabemos cual es nuestro error";"De acuerdo"
"Sabia exactamente y en tiempo real donde tenia errores mi codigo sin tener que buscarlo en codigos en ocasiones muy muy largos.";"Totalmente de acuerdo"
"porque permitia inferir donde estaba mal";"De acuerdo"
"Porque puedo identificar en que casos mi programa falla para asi buscar la manera de corregir las fallas";"Totalmente de acuerdo"
"La mayoria de veces, mostraba el tipo de error que se estaba cometiendo y facilitaba la tarea al momento de realizar las lineas de codigo escritas";"De acuerdo"
"Porque UnCode me permitia ver las salidas que debia tener el programa y basandome en estas salidas podia corregir los errores que haya cometido en el programa";"De acuerdo"
"Permite ver con exactitud donde estan los errores y los hace mas faciles de corregir";"Totalmente de acuerdo"
"Fue muy util, porque mostraba la parte que teniamos mala y esto nos daba una idea de que debiamos corregir.";"De acuerdo"
